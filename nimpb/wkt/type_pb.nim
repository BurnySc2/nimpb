# Generated by protoc_gen_nim. Do not edit!

import base64
import intsets
import json

import nimpb/nimpb
import nimpb/json as nimpb_json

import nimpb/wkt/any_pb
import nimpb/wkt/source_context_pb

type
    google_protobuf_Syntax* {.pure.} = enum
        SYNTAX_PROTO2 = 0
        SYNTAX_PROTO3 = 1
    google_protobuf_Field_Kind* {.pure.} = enum
        TYPE_UNKNOWN = 0
        TYPE_DOUBLE = 1
        TYPE_FLOAT = 2
        TYPE_INT64 = 3
        TYPE_UINT64 = 4
        TYPE_INT32 = 5
        TYPE_FIXED64 = 6
        TYPE_FIXED32 = 7
        TYPE_BOOL = 8
        TYPE_STRING = 9
        TYPE_GROUP = 10
        TYPE_MESSAGE = 11
        TYPE_BYTES = 12
        TYPE_UINT32 = 13
        TYPE_ENUM = 14
        TYPE_SFIXED32 = 15
        TYPE_SFIXED64 = 16
        TYPE_SINT32 = 17
        TYPE_SINT64 = 18
    google_protobuf_Field_Cardinality* {.pure.} = enum
        CARDINALITY_UNKNOWN = 0
        CARDINALITY_OPTIONAL = 1
        CARDINALITY_REQUIRED = 2
        CARDINALITY_REPEATED = 3
    google_protobuf_Type* = ref google_protobuf_TypeObj
    google_protobuf_TypeObj* = object of Message
        name: string
        fields: seq[google_protobuf_Field]
        oneofs: seq[string]
        options: seq[google_protobuf_Option]
        source_context: google_protobuf_SourceContext
        syntax: google_protobuf_Syntax
    google_protobuf_Field* = ref google_protobuf_FieldObj
    google_protobuf_FieldObj* = object of Message
        kind: google_protobuf_Field_Kind
        cardinality: google_protobuf_Field_Cardinality
        number: int32
        name: string
        type_url: string
        oneof_index: int32
        packed: bool
        options: seq[google_protobuf_Option]
        json_name: string
        default_value: string
    google_protobuf_Enum* = ref google_protobuf_EnumObj
    google_protobuf_EnumObj* = object of Message
        name: string
        enumvalue: seq[google_protobuf_EnumValue]
        options: seq[google_protobuf_Option]
        source_context: google_protobuf_SourceContext
        syntax: google_protobuf_Syntax
    google_protobuf_EnumValue* = ref google_protobuf_EnumValueObj
    google_protobuf_EnumValueObj* = object of Message
        name: string
        number: int32
        options: seq[google_protobuf_Option]
    google_protobuf_Option* = ref google_protobuf_OptionObj
    google_protobuf_OptionObj* = object of Message
        name: string
        value: google_protobuf_Any

proc newgoogle_protobuf_Option*(): google_protobuf_Option
proc newgoogle_protobuf_Option*(data: string): google_protobuf_Option
proc writegoogle_protobuf_Option*(stream: Stream, message: google_protobuf_Option)
proc readgoogle_protobuf_Option*(stream: Stream): google_protobuf_Option
proc sizeOfgoogle_protobuf_Option*(message: google_protobuf_Option): uint64
proc toJson*(message: google_protobuf_Option): JsonNode

proc newgoogle_protobuf_Field*(): google_protobuf_Field
proc newgoogle_protobuf_Field*(data: string): google_protobuf_Field
proc writegoogle_protobuf_Field*(stream: Stream, message: google_protobuf_Field)
proc readgoogle_protobuf_Field*(stream: Stream): google_protobuf_Field
proc sizeOfgoogle_protobuf_Field*(message: google_protobuf_Field): uint64
proc toJson*(message: google_protobuf_Field): JsonNode

proc newgoogle_protobuf_Type*(): google_protobuf_Type
proc newgoogle_protobuf_Type*(data: string): google_protobuf_Type
proc writegoogle_protobuf_Type*(stream: Stream, message: google_protobuf_Type)
proc readgoogle_protobuf_Type*(stream: Stream): google_protobuf_Type
proc sizeOfgoogle_protobuf_Type*(message: google_protobuf_Type): uint64
proc toJson*(message: google_protobuf_Type): JsonNode

proc newgoogle_protobuf_EnumValue*(): google_protobuf_EnumValue
proc newgoogle_protobuf_EnumValue*(data: string): google_protobuf_EnumValue
proc writegoogle_protobuf_EnumValue*(stream: Stream, message: google_protobuf_EnumValue)
proc readgoogle_protobuf_EnumValue*(stream: Stream): google_protobuf_EnumValue
proc sizeOfgoogle_protobuf_EnumValue*(message: google_protobuf_EnumValue): uint64
proc toJson*(message: google_protobuf_EnumValue): JsonNode

proc newgoogle_protobuf_Enum*(): google_protobuf_Enum
proc newgoogle_protobuf_Enum*(data: string): google_protobuf_Enum
proc writegoogle_protobuf_Enum*(stream: Stream, message: google_protobuf_Enum)
proc readgoogle_protobuf_Enum*(stream: Stream): google_protobuf_Enum
proc sizeOfgoogle_protobuf_Enum*(message: google_protobuf_Enum): uint64
proc toJson*(message: google_protobuf_Enum): JsonNode

proc newgoogle_protobuf_Option*(): google_protobuf_Option =
    new(result)
    initMessage(result[])
    result.name = ""
    result.value = nil

proc clearname*(message: google_protobuf_Option) =
    message.name = ""
    clearFields(message, [1])

proc hasname*(message: google_protobuf_Option): bool =
    result = hasField(message, 1)

proc setname*(message: google_protobuf_Option, value: string) =
    message.name = value
    setField(message, 1)

proc name*(message: google_protobuf_Option): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Option, value: string) {.inline.} =
    setname(message, value)

proc clearvalue*(message: google_protobuf_Option) =
    message.value = nil
    clearFields(message, [2])

proc hasvalue*(message: google_protobuf_Option): bool =
    result = hasField(message, 2)

proc setvalue*(message: google_protobuf_Option, value: google_protobuf_Any) =
    message.value = value
    setField(message, 2)

proc value*(message: google_protobuf_Option): google_protobuf_Any {.inline.} =
    message.value

proc `value=`*(message: google_protobuf_Option, value: google_protobuf_Any) {.inline.} =
    setvalue(message, value)

proc sizeOfgoogle_protobuf_Option*(message: google_protobuf_Option): uint64 =
    if hasname(message):
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    if hasvalue(message):
        result = result + sizeOfTag(2, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Any(message.value))
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_Option*(stream: Stream, message: google_protobuf_Option) =
    if hasname(message):
        protoWriteString(stream, message.name, 1)
    if hasvalue(message):
        writeMessage(stream, message.value, 2)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_Option*(stream: Stream): google_protobuf_Option =
    result = newgoogle_protobuf_Option()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            setvalue(result, newgoogle_protobuf_Any(data))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_Option): JsonNode =
    result = newJObject()
    if hasname(message):
        result["name"] = %message.name
    if hasvalue(message):
        result["value"] = toJson(message.value)

proc serialize*(message: google_protobuf_Option): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_Option(ss, message)
    result = ss.data

proc newgoogle_protobuf_Option*(data: string): google_protobuf_Option =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_Option(ss)


proc newgoogle_protobuf_Field*(): google_protobuf_Field =
    new(result)
    initMessage(result[])
    result.kind = google_protobuf_Field_Kind.TYPE_UNKNOWN
    result.cardinality = google_protobuf_Field_Cardinality.CARDINALITY_UNKNOWN
    result.number = 0
    result.name = ""
    result.type_url = ""
    result.oneof_index = 0
    result.packed = false
    result.options = @[]
    result.json_name = ""
    result.default_value = ""

proc clearkind*(message: google_protobuf_Field) =
    message.kind = google_protobuf_Field_Kind.TYPE_UNKNOWN
    clearFields(message, [1])

proc haskind*(message: google_protobuf_Field): bool =
    result = hasField(message, 1)

proc setkind*(message: google_protobuf_Field, value: google_protobuf_Field_Kind) =
    message.kind = value
    setField(message, 1)

proc kind*(message: google_protobuf_Field): google_protobuf_Field_Kind {.inline.} =
    message.kind

proc `kind=`*(message: google_protobuf_Field, value: google_protobuf_Field_Kind) {.inline.} =
    setkind(message, value)

proc clearcardinality*(message: google_protobuf_Field) =
    message.cardinality = google_protobuf_Field_Cardinality.CARDINALITY_UNKNOWN
    clearFields(message, [2])

proc hascardinality*(message: google_protobuf_Field): bool =
    result = hasField(message, 2)

proc setcardinality*(message: google_protobuf_Field, value: google_protobuf_Field_Cardinality) =
    message.cardinality = value
    setField(message, 2)

proc cardinality*(message: google_protobuf_Field): google_protobuf_Field_Cardinality {.inline.} =
    message.cardinality

proc `cardinality=`*(message: google_protobuf_Field, value: google_protobuf_Field_Cardinality) {.inline.} =
    setcardinality(message, value)

proc clearnumber*(message: google_protobuf_Field) =
    message.number = 0
    clearFields(message, [3])

proc hasnumber*(message: google_protobuf_Field): bool =
    result = hasField(message, 3)

proc setnumber*(message: google_protobuf_Field, value: int32) =
    message.number = value
    setField(message, 3)

proc number*(message: google_protobuf_Field): int32 {.inline.} =
    message.number

proc `number=`*(message: google_protobuf_Field, value: int32) {.inline.} =
    setnumber(message, value)

proc clearname*(message: google_protobuf_Field) =
    message.name = ""
    clearFields(message, [4])

proc hasname*(message: google_protobuf_Field): bool =
    result = hasField(message, 4)

proc setname*(message: google_protobuf_Field, value: string) =
    message.name = value
    setField(message, 4)

proc name*(message: google_protobuf_Field): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setname(message, value)

proc cleartype_url*(message: google_protobuf_Field) =
    message.type_url = ""
    clearFields(message, [6])

proc hastype_url*(message: google_protobuf_Field): bool =
    result = hasField(message, 6)

proc settype_url*(message: google_protobuf_Field, value: string) =
    message.type_url = value
    setField(message, 6)

proc type_url*(message: google_protobuf_Field): string {.inline.} =
    message.type_url

proc `type_url=`*(message: google_protobuf_Field, value: string) {.inline.} =
    settype_url(message, value)

proc clearoneof_index*(message: google_protobuf_Field) =
    message.oneof_index = 0
    clearFields(message, [7])

proc hasoneof_index*(message: google_protobuf_Field): bool =
    result = hasField(message, 7)

proc setoneof_index*(message: google_protobuf_Field, value: int32) =
    message.oneof_index = value
    setField(message, 7)

proc oneof_index*(message: google_protobuf_Field): int32 {.inline.} =
    message.oneof_index

proc `oneof_index=`*(message: google_protobuf_Field, value: int32) {.inline.} =
    setoneof_index(message, value)

proc clearpacked*(message: google_protobuf_Field) =
    message.packed = false
    clearFields(message, [8])

proc haspacked*(message: google_protobuf_Field): bool =
    result = hasField(message, 8)

proc setpacked*(message: google_protobuf_Field, value: bool) =
    message.packed = value
    setField(message, 8)

proc packed*(message: google_protobuf_Field): bool {.inline.} =
    message.packed

proc `packed=`*(message: google_protobuf_Field, value: bool) {.inline.} =
    setpacked(message, value)

proc clearoptions*(message: google_protobuf_Field) =
    message.options = @[]
    clearFields(message, [9])

proc hasoptions*(message: google_protobuf_Field): bool =
    result = hasField(message, 9) or (len(message.options) > 0)

proc setoptions*(message: google_protobuf_Field, value: seq[google_protobuf_Option]) =
    message.options = value
    setField(message, 9)

proc addoptions*(message: google_protobuf_Field, value: google_protobuf_Option) =
    add(message.options, value)
    setField(message, 9)

proc options*(message: google_protobuf_Field): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Field, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearjson_name*(message: google_protobuf_Field) =
    message.json_name = ""
    clearFields(message, [10])

proc hasjson_name*(message: google_protobuf_Field): bool =
    result = hasField(message, 10)

proc setjson_name*(message: google_protobuf_Field, value: string) =
    message.json_name = value
    setField(message, 10)

proc json_name*(message: google_protobuf_Field): string {.inline.} =
    message.json_name

proc `json_name=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setjson_name(message, value)

proc cleardefault_value*(message: google_protobuf_Field) =
    message.default_value = ""
    clearFields(message, [11])

proc hasdefault_value*(message: google_protobuf_Field): bool =
    result = hasField(message, 11)

proc setdefault_value*(message: google_protobuf_Field, value: string) =
    message.default_value = value
    setField(message, 11)

proc default_value*(message: google_protobuf_Field): string {.inline.} =
    message.default_value

proc `default_value=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setdefault_value(message, value)

proc sizeOfgoogle_protobuf_Field*(message: google_protobuf_Field): uint64 =
    if haskind(message):
        result = result + sizeOfTag(1, WireType.Varint)
        result = result + sizeOfEnum[google_protobuf_Field_Kind](message.kind)
    if hascardinality(message):
        result = result + sizeOfTag(2, WireType.Varint)
        result = result + sizeOfEnum[google_protobuf_Field_Cardinality](message.cardinality)
    if hasnumber(message):
        result = result + sizeOfTag(3, WireType.Varint)
        result = result + sizeOfInt32(message.number)
    if hasname(message):
        result = result + sizeOfTag(4, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    if hastype_url(message):
        result = result + sizeOfTag(6, WireType.LengthDelimited)
        result = result + sizeOfString(message.type_url)
    if hasoneof_index(message):
        result = result + sizeOfTag(7, WireType.Varint)
        result = result + sizeOfInt32(message.oneof_index)
    if haspacked(message):
        result = result + sizeOfTag(8, WireType.Varint)
        result = result + sizeOfBool(message.packed)
    for value in message.options:
        result = result + sizeOfTag(9, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Option(value))
    if hasjson_name(message):
        result = result + sizeOfTag(10, WireType.LengthDelimited)
        result = result + sizeOfString(message.json_name)
    if hasdefault_value(message):
        result = result + sizeOfTag(11, WireType.LengthDelimited)
        result = result + sizeOfString(message.default_value)
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_Field*(stream: Stream, message: google_protobuf_Field) =
    if haskind(message):
        protoWriteEnum(stream, message.kind, 1)
    if hascardinality(message):
        protoWriteEnum(stream, message.cardinality, 2)
    if hasnumber(message):
        protoWriteInt32(stream, message.number, 3)
    if hasname(message):
        protoWriteString(stream, message.name, 4)
    if hastype_url(message):
        protoWriteString(stream, message.type_url, 6)
    if hasoneof_index(message):
        protoWriteInt32(stream, message.oneof_index, 7)
    if haspacked(message):
        protoWriteBool(stream, message.packed, 8)
    for value in message.options:
        writeMessage(stream, value, 9)
    if hasjson_name(message):
        protoWriteString(stream, message.json_name, 10)
    if hasdefault_value(message):
        protoWriteString(stream, message.default_value, 11)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_Field*(stream: Stream): google_protobuf_Field =
    result = newgoogle_protobuf_Field()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.Varint)
            setkind(result, protoReadEnum[google_protobuf_Field_Kind](stream))
        of 2:
            expectWireType(wireType, WireType.Varint)
            setcardinality(result, protoReadEnum[google_protobuf_Field_Cardinality](stream))
        of 3:
            expectWireType(wireType, WireType.Varint)
            setnumber(result, protoReadInt32(stream))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 6:
            expectWireType(wireType, WireType.LengthDelimited)
            settype_url(result, protoReadString(stream))
        of 7:
            expectWireType(wireType, WireType.Varint)
            setoneof_index(result, protoReadInt32(stream))
        of 8:
            expectWireType(wireType, WireType.Varint)
            setpacked(result, protoReadBool(stream))
        of 9:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addoptions(result, newgoogle_protobuf_Option(data))
        of 10:
            expectWireType(wireType, WireType.LengthDelimited)
            setjson_name(result, protoReadString(stream))
        of 11:
            expectWireType(wireType, WireType.LengthDelimited)
            setdefault_value(result, protoReadString(stream))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_Field): JsonNode =
    result = newJObject()
    if haskind(message):
        result["kind"] = %($message.kind)
    if hascardinality(message):
        result["cardinality"] = %($message.cardinality)
    if hasnumber(message):
        result["number"] = %message.number
    if hasname(message):
        result["name"] = %message.name
    if hastype_url(message):
        result["typeUrl"] = %message.type_url
    if hasoneof_index(message):
        result["oneofIndex"] = %message.oneof_index
    if haspacked(message):
        result["packed"] = %message.packed
    if hasoptions(message):
        let arr = newJArray()
        for value in message.options:
            add(arr, toJson(value))
        result["options"] = arr
    if hasjson_name(message):
        result["jsonName"] = %message.json_name
    if hasdefault_value(message):
        result["defaultValue"] = %message.default_value

proc serialize*(message: google_protobuf_Field): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_Field(ss, message)
    result = ss.data

proc newgoogle_protobuf_Field*(data: string): google_protobuf_Field =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_Field(ss)


proc newgoogle_protobuf_Type*(): google_protobuf_Type =
    new(result)
    initMessage(result[])
    result.name = ""
    result.fields = @[]
    result.oneofs = @[]
    result.options = @[]
    result.source_context = nil
    result.syntax = google_protobuf_Syntax.SYNTAX_PROTO2

proc clearname*(message: google_protobuf_Type) =
    message.name = ""
    clearFields(message, [1])

proc hasname*(message: google_protobuf_Type): bool =
    result = hasField(message, 1)

proc setname*(message: google_protobuf_Type, value: string) =
    message.name = value
    setField(message, 1)

proc name*(message: google_protobuf_Type): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Type, value: string) {.inline.} =
    setname(message, value)

proc clearfields*(message: google_protobuf_Type) =
    message.fields = @[]
    clearFields(message, [2])

proc hasfields*(message: google_protobuf_Type): bool =
    result = hasField(message, 2) or (len(message.fields) > 0)

proc setfields*(message: google_protobuf_Type, value: seq[google_protobuf_Field]) =
    message.fields = value
    setField(message, 2)

proc addfields*(message: google_protobuf_Type, value: google_protobuf_Field) =
    add(message.fields, value)
    setField(message, 2)

proc fields*(message: google_protobuf_Type): seq[google_protobuf_Field] {.inline.} =
    message.fields

proc `fields=`*(message: google_protobuf_Type, value: seq[google_protobuf_Field]) {.inline.} =
    setfields(message, value)

proc clearoneofs*(message: google_protobuf_Type) =
    message.oneofs = @[]
    clearFields(message, [3])

proc hasoneofs*(message: google_protobuf_Type): bool =
    result = hasField(message, 3) or (len(message.oneofs) > 0)

proc setoneofs*(message: google_protobuf_Type, value: seq[string]) =
    message.oneofs = value
    setField(message, 3)

proc addoneofs*(message: google_protobuf_Type, value: string) =
    add(message.oneofs, value)
    setField(message, 3)

proc oneofs*(message: google_protobuf_Type): seq[string] {.inline.} =
    message.oneofs

proc `oneofs=`*(message: google_protobuf_Type, value: seq[string]) {.inline.} =
    setoneofs(message, value)

proc clearoptions*(message: google_protobuf_Type) =
    message.options = @[]
    clearFields(message, [4])

proc hasoptions*(message: google_protobuf_Type): bool =
    result = hasField(message, 4) or (len(message.options) > 0)

proc setoptions*(message: google_protobuf_Type, value: seq[google_protobuf_Option]) =
    message.options = value
    setField(message, 4)

proc addoptions*(message: google_protobuf_Type, value: google_protobuf_Option) =
    add(message.options, value)
    setField(message, 4)

proc options*(message: google_protobuf_Type): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Type, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearsource_context*(message: google_protobuf_Type) =
    message.source_context = nil
    clearFields(message, [5])

proc hassource_context*(message: google_protobuf_Type): bool =
    result = hasField(message, 5)

proc setsource_context*(message: google_protobuf_Type, value: google_protobuf_SourceContext) =
    message.source_context = value
    setField(message, 5)

proc source_context*(message: google_protobuf_Type): google_protobuf_SourceContext {.inline.} =
    message.source_context

proc `source_context=`*(message: google_protobuf_Type, value: google_protobuf_SourceContext) {.inline.} =
    setsource_context(message, value)

proc clearsyntax*(message: google_protobuf_Type) =
    message.syntax = google_protobuf_Syntax.SYNTAX_PROTO2
    clearFields(message, [6])

proc hassyntax*(message: google_protobuf_Type): bool =
    result = hasField(message, 6)

proc setsyntax*(message: google_protobuf_Type, value: google_protobuf_Syntax) =
    message.syntax = value
    setField(message, 6)

proc syntax*(message: google_protobuf_Type): google_protobuf_Syntax {.inline.} =
    message.syntax

proc `syntax=`*(message: google_protobuf_Type, value: google_protobuf_Syntax) {.inline.} =
    setsyntax(message, value)

proc sizeOfgoogle_protobuf_Type*(message: google_protobuf_Type): uint64 =
    if hasname(message):
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    for value in message.fields:
        result = result + sizeOfTag(2, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Field(value))
    for value in message.oneofs:
        result = result + sizeOfTag(3, WireType.LengthDelimited)
        result = result + sizeOfString(value)
    for value in message.options:
        result = result + sizeOfTag(4, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Option(value))
    if hassource_context(message):
        result = result + sizeOfTag(5, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_SourceContext(message.source_context))
    if hassyntax(message):
        result = result + sizeOfTag(6, WireType.Varint)
        result = result + sizeOfEnum[google_protobuf_Syntax](message.syntax)
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_Type*(stream: Stream, message: google_protobuf_Type) =
    if hasname(message):
        protoWriteString(stream, message.name, 1)
    for value in message.fields:
        writeMessage(stream, value, 2)
    for value in message.oneofs:
        protoWriteString(stream, value, 3)
    for value in message.options:
        writeMessage(stream, value, 4)
    if hassource_context(message):
        writeMessage(stream, message.source_context, 5)
    if hassyntax(message):
        protoWriteEnum(stream, message.syntax, 6)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_Type*(stream: Stream): google_protobuf_Type =
    result = newgoogle_protobuf_Type()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addfields(result, newgoogle_protobuf_Field(data))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            addoneofs(result, protoReadString(stream))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addoptions(result, newgoogle_protobuf_Option(data))
        of 5:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            setsource_context(result, newgoogle_protobuf_SourceContext(data))
        of 6:
            expectWireType(wireType, WireType.Varint)
            setsyntax(result, protoReadEnum[google_protobuf_Syntax](stream))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_Type): JsonNode =
    result = newJObject()
    if hasname(message):
        result["name"] = %message.name
    if hasfields(message):
        let arr = newJArray()
        for value in message.fields:
            add(arr, toJson(value))
        result["fields"] = arr
    if hasoneofs(message):
        let arr = newJArray()
        for value in message.oneofs:
            add(arr, %value)
        result["oneofs"] = arr
    if hasoptions(message):
        let arr = newJArray()
        for value in message.options:
            add(arr, toJson(value))
        result["options"] = arr
    if hassource_context(message):
        result["sourceContext"] = toJson(message.source_context)
    if hassyntax(message):
        result["syntax"] = %($message.syntax)

proc serialize*(message: google_protobuf_Type): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_Type(ss, message)
    result = ss.data

proc newgoogle_protobuf_Type*(data: string): google_protobuf_Type =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_Type(ss)


proc newgoogle_protobuf_EnumValue*(): google_protobuf_EnumValue =
    new(result)
    initMessage(result[])
    result.name = ""
    result.number = 0
    result.options = @[]

proc clearname*(message: google_protobuf_EnumValue) =
    message.name = ""
    clearFields(message, [1])

proc hasname*(message: google_protobuf_EnumValue): bool =
    result = hasField(message, 1)

proc setname*(message: google_protobuf_EnumValue, value: string) =
    message.name = value
    setField(message, 1)

proc name*(message: google_protobuf_EnumValue): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_EnumValue, value: string) {.inline.} =
    setname(message, value)

proc clearnumber*(message: google_protobuf_EnumValue) =
    message.number = 0
    clearFields(message, [2])

proc hasnumber*(message: google_protobuf_EnumValue): bool =
    result = hasField(message, 2)

proc setnumber*(message: google_protobuf_EnumValue, value: int32) =
    message.number = value
    setField(message, 2)

proc number*(message: google_protobuf_EnumValue): int32 {.inline.} =
    message.number

proc `number=`*(message: google_protobuf_EnumValue, value: int32) {.inline.} =
    setnumber(message, value)

proc clearoptions*(message: google_protobuf_EnumValue) =
    message.options = @[]
    clearFields(message, [3])

proc hasoptions*(message: google_protobuf_EnumValue): bool =
    result = hasField(message, 3) or (len(message.options) > 0)

proc setoptions*(message: google_protobuf_EnumValue, value: seq[google_protobuf_Option]) =
    message.options = value
    setField(message, 3)

proc addoptions*(message: google_protobuf_EnumValue, value: google_protobuf_Option) =
    add(message.options, value)
    setField(message, 3)

proc options*(message: google_protobuf_EnumValue): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_EnumValue, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc sizeOfgoogle_protobuf_EnumValue*(message: google_protobuf_EnumValue): uint64 =
    if hasname(message):
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    if hasnumber(message):
        result = result + sizeOfTag(2, WireType.Varint)
        result = result + sizeOfInt32(message.number)
    for value in message.options:
        result = result + sizeOfTag(3, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Option(value))
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_EnumValue*(stream: Stream, message: google_protobuf_EnumValue) =
    if hasname(message):
        protoWriteString(stream, message.name, 1)
    if hasnumber(message):
        protoWriteInt32(stream, message.number, 2)
    for value in message.options:
        writeMessage(stream, value, 3)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_EnumValue*(stream: Stream): google_protobuf_EnumValue =
    result = newgoogle_protobuf_EnumValue()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 2:
            expectWireType(wireType, WireType.Varint)
            setnumber(result, protoReadInt32(stream))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addoptions(result, newgoogle_protobuf_Option(data))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_EnumValue): JsonNode =
    result = newJObject()
    if hasname(message):
        result["name"] = %message.name
    if hasnumber(message):
        result["number"] = %message.number
    if hasoptions(message):
        let arr = newJArray()
        for value in message.options:
            add(arr, toJson(value))
        result["options"] = arr

proc serialize*(message: google_protobuf_EnumValue): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_EnumValue(ss, message)
    result = ss.data

proc newgoogle_protobuf_EnumValue*(data: string): google_protobuf_EnumValue =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_EnumValue(ss)


proc newgoogle_protobuf_Enum*(): google_protobuf_Enum =
    new(result)
    initMessage(result[])
    result.name = ""
    result.enumvalue = @[]
    result.options = @[]
    result.source_context = nil
    result.syntax = google_protobuf_Syntax.SYNTAX_PROTO2

proc clearname*(message: google_protobuf_Enum) =
    message.name = ""
    clearFields(message, [1])

proc hasname*(message: google_protobuf_Enum): bool =
    result = hasField(message, 1)

proc setname*(message: google_protobuf_Enum, value: string) =
    message.name = value
    setField(message, 1)

proc name*(message: google_protobuf_Enum): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Enum, value: string) {.inline.} =
    setname(message, value)

proc clearenumvalue*(message: google_protobuf_Enum) =
    message.enumvalue = @[]
    clearFields(message, [2])

proc hasenumvalue*(message: google_protobuf_Enum): bool =
    result = hasField(message, 2) or (len(message.enumvalue) > 0)

proc setenumvalue*(message: google_protobuf_Enum, value: seq[google_protobuf_EnumValue]) =
    message.enumvalue = value
    setField(message, 2)

proc addenumvalue*(message: google_protobuf_Enum, value: google_protobuf_EnumValue) =
    add(message.enumvalue, value)
    setField(message, 2)

proc enumvalue*(message: google_protobuf_Enum): seq[google_protobuf_EnumValue] {.inline.} =
    message.enumvalue

proc `enumvalue=`*(message: google_protobuf_Enum, value: seq[google_protobuf_EnumValue]) {.inline.} =
    setenumvalue(message, value)

proc clearoptions*(message: google_protobuf_Enum) =
    message.options = @[]
    clearFields(message, [3])

proc hasoptions*(message: google_protobuf_Enum): bool =
    result = hasField(message, 3) or (len(message.options) > 0)

proc setoptions*(message: google_protobuf_Enum, value: seq[google_protobuf_Option]) =
    message.options = value
    setField(message, 3)

proc addoptions*(message: google_protobuf_Enum, value: google_protobuf_Option) =
    add(message.options, value)
    setField(message, 3)

proc options*(message: google_protobuf_Enum): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Enum, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearsource_context*(message: google_protobuf_Enum) =
    message.source_context = nil
    clearFields(message, [4])

proc hassource_context*(message: google_protobuf_Enum): bool =
    result = hasField(message, 4)

proc setsource_context*(message: google_protobuf_Enum, value: google_protobuf_SourceContext) =
    message.source_context = value
    setField(message, 4)

proc source_context*(message: google_protobuf_Enum): google_protobuf_SourceContext {.inline.} =
    message.source_context

proc `source_context=`*(message: google_protobuf_Enum, value: google_protobuf_SourceContext) {.inline.} =
    setsource_context(message, value)

proc clearsyntax*(message: google_protobuf_Enum) =
    message.syntax = google_protobuf_Syntax.SYNTAX_PROTO2
    clearFields(message, [5])

proc hassyntax*(message: google_protobuf_Enum): bool =
    result = hasField(message, 5)

proc setsyntax*(message: google_protobuf_Enum, value: google_protobuf_Syntax) =
    message.syntax = value
    setField(message, 5)

proc syntax*(message: google_protobuf_Enum): google_protobuf_Syntax {.inline.} =
    message.syntax

proc `syntax=`*(message: google_protobuf_Enum, value: google_protobuf_Syntax) {.inline.} =
    setsyntax(message, value)

proc sizeOfgoogle_protobuf_Enum*(message: google_protobuf_Enum): uint64 =
    if hasname(message):
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    for value in message.enumvalue:
        result = result + sizeOfTag(2, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_EnumValue(value))
    for value in message.options:
        result = result + sizeOfTag(3, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_Option(value))
    if hassource_context(message):
        result = result + sizeOfTag(4, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_SourceContext(message.source_context))
    if hassyntax(message):
        result = result + sizeOfTag(5, WireType.Varint)
        result = result + sizeOfEnum[google_protobuf_Syntax](message.syntax)
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_Enum*(stream: Stream, message: google_protobuf_Enum) =
    if hasname(message):
        protoWriteString(stream, message.name, 1)
    for value in message.enumvalue:
        writeMessage(stream, value, 2)
    for value in message.options:
        writeMessage(stream, value, 3)
    if hassource_context(message):
        writeMessage(stream, message.source_context, 4)
    if hassyntax(message):
        protoWriteEnum(stream, message.syntax, 5)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_Enum*(stream: Stream): google_protobuf_Enum =
    result = newgoogle_protobuf_Enum()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, protoReadString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addenumvalue(result, newgoogle_protobuf_EnumValue(data))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            addoptions(result, newgoogle_protobuf_Option(data))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            let data = readLengthDelimited(stream)
            setsource_context(result, newgoogle_protobuf_SourceContext(data))
        of 5:
            expectWireType(wireType, WireType.Varint)
            setsyntax(result, protoReadEnum[google_protobuf_Syntax](stream))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_Enum): JsonNode =
    result = newJObject()
    if hasname(message):
        result["name"] = %message.name
    if hasenumvalue(message):
        let arr = newJArray()
        for value in message.enumvalue:
            add(arr, toJson(value))
        result["enumvalue"] = arr
    if hasoptions(message):
        let arr = newJArray()
        for value in message.options:
            add(arr, toJson(value))
        result["options"] = arr
    if hassource_context(message):
        result["sourceContext"] = toJson(message.source_context)
    if hassyntax(message):
        result["syntax"] = %($message.syntax)

proc serialize*(message: google_protobuf_Enum): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_Enum(ss, message)
    result = ss.data

proc newgoogle_protobuf_Enum*(data: string): google_protobuf_Enum =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_Enum(ss)


