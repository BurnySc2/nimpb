# Generated by protoc_gen_nim. Do not edit!

import base64
import intsets
import json

import nimpb/nimpb
import nimpb/json as nimpb_json

type
    google_protobuf_SourceContext* = ref google_protobuf_SourceContextObj
    google_protobuf_SourceContextObj* = object of Message
        file_name: string

proc newgoogle_protobuf_SourceContext*(): google_protobuf_SourceContext
proc newgoogle_protobuf_SourceContext*(data: string): google_protobuf_SourceContext
proc writegoogle_protobuf_SourceContext*(stream: Stream, message: google_protobuf_SourceContext)
proc readgoogle_protobuf_SourceContext*(stream: Stream): google_protobuf_SourceContext
proc sizeOfgoogle_protobuf_SourceContext*(message: google_protobuf_SourceContext): uint64
proc toJson*(message: google_protobuf_SourceContext): JsonNode

proc newgoogle_protobuf_SourceContext*(): google_protobuf_SourceContext =
    new(result)
    initMessage(result[])
    result.file_name = ""

proc clearfile_name*(message: google_protobuf_SourceContext) =
    message.file_name = ""
    clearFields(message, [1])

proc hasfile_name*(message: google_protobuf_SourceContext): bool =
    result = hasField(message, 1)

proc setfile_name*(message: google_protobuf_SourceContext, value: string) =
    message.file_name = value
    setField(message, 1)

proc file_name*(message: google_protobuf_SourceContext): string {.inline.} =
    message.file_name

proc `file_name=`*(message: google_protobuf_SourceContext, value: string) {.inline.} =
    setfile_name(message, value)

proc sizeOfgoogle_protobuf_SourceContext*(message: google_protobuf_SourceContext): uint64 =
    if hasfile_name(message):
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.file_name)
    result = result + sizeOfUnknownFields(message)

proc writegoogle_protobuf_SourceContext*(stream: Stream, message: google_protobuf_SourceContext) =
    if hasfile_name(message):
        protoWriteString(stream, message.file_name, 1)
    writeUnknownFields(stream, message)

proc readgoogle_protobuf_SourceContext*(stream: Stream): google_protobuf_SourceContext =
    result = newgoogle_protobuf_SourceContext()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setfile_name(result, protoReadString(stream))
        else: readUnknownField(stream, result, tag)

proc toJson*(message: google_protobuf_SourceContext): JsonNode =
    result = newJObject()
    if hasfile_name(message):
        result["fileName"] = %message.file_name

proc serialize*(message: google_protobuf_SourceContext): string =
    let
        ss = newStringStream()
    writegoogle_protobuf_SourceContext(ss, message)
    result = ss.data

proc newgoogle_protobuf_SourceContext*(data: string): google_protobuf_SourceContext =
    let
        ss = newStringStream(data)
    result = readgoogle_protobuf_SourceContext(ss)


