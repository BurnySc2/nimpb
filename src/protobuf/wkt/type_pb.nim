# Generated by protoc_gen_nim. Do not edit!

import intsets

import protobuf/protobuf

import protobuf/wkt/any_pb
import protobuf/wkt/source_context_pb

type
    google_protobuf_Syntax* {.pure.} = enum
        SYNTAX_PROTO2 = 0
        SYNTAX_PROTO3 = 1
    google_protobuf_Field_Kind* {.pure.} = enum
        TYPE_UNKNOWN = 0
        TYPE_DOUBLE = 1
        TYPE_FLOAT = 2
        TYPE_INT64 = 3
        TYPE_UINT64 = 4
        TYPE_INT32 = 5
        TYPE_FIXED64 = 6
        TYPE_FIXED32 = 7
        TYPE_BOOL = 8
        TYPE_STRING = 9
        TYPE_GROUP = 10
        TYPE_MESSAGE = 11
        TYPE_BYTES = 12
        TYPE_UINT32 = 13
        TYPE_ENUM = 14
        TYPE_SFIXED32 = 15
        TYPE_SFIXED64 = 16
        TYPE_SINT32 = 17
        TYPE_SINT64 = 18
    google_protobuf_Field_Cardinality* {.pure.} = enum
        CARDINALITY_UNKNOWN = 0
        CARDINALITY_OPTIONAL = 1
        CARDINALITY_REQUIRED = 2
        CARDINALITY_REPEATED = 3
    google_protobuf_Type* = ref google_protobuf_TypeObj
    google_protobuf_TypeObj* = object of RootObj
        hasField: IntSet
        name: string
        fields: seq[google_protobuf_Field]
        oneofs: seq[string]
        options: seq[google_protobuf_Option]
        source_context: google_protobuf_SourceContext
        syntax: google_protobuf_Syntax
    google_protobuf_Field* = ref google_protobuf_FieldObj
    google_protobuf_FieldObj* = object of RootObj
        hasField: IntSet
        kind: google_protobuf_Field_Kind
        cardinality: google_protobuf_Field_Cardinality
        number: int32
        name: string
        type_url: string
        oneof_index: int32
        packed: bool
        options: seq[google_protobuf_Option]
        json_name: string
        default_value: string
    google_protobuf_Enum* = ref google_protobuf_EnumObj
    google_protobuf_EnumObj* = object of RootObj
        hasField: IntSet
        name: string
        enumvalue: seq[google_protobuf_EnumValue]
        options: seq[google_protobuf_Option]
        source_context: google_protobuf_SourceContext
        syntax: google_protobuf_Syntax
    google_protobuf_EnumValue* = ref google_protobuf_EnumValueObj
    google_protobuf_EnumValueObj* = object of RootObj
        hasField: IntSet
        name: string
        number: int32
        options: seq[google_protobuf_Option]
    google_protobuf_Option* = ref google_protobuf_OptionObj
    google_protobuf_OptionObj* = object of RootObj
        hasField: IntSet
        name: string
        value: google_protobuf_Any

proc readgoogle_protobuf_Syntax*(stream: ProtobufStream): google_protobuf_Syntax =
    google_protobuf_Syntax(readUInt32(stream))

proc writegoogle_protobuf_Syntax*(stream: ProtobufStream, value: google_protobuf_Syntax) =
    writeUInt32(stream, uint32(value))

proc sizeOfgoogle_protobuf_Syntax*(value: google_protobuf_Syntax): uint64 =
    sizeOfUInt32(uint32(value))

proc readgoogle_protobuf_Field_Kind*(stream: ProtobufStream): google_protobuf_Field_Kind =
    google_protobuf_Field_Kind(readUInt32(stream))

proc writegoogle_protobuf_Field_Kind*(stream: ProtobufStream, value: google_protobuf_Field_Kind) =
    writeUInt32(stream, uint32(value))

proc sizeOfgoogle_protobuf_Field_Kind*(value: google_protobuf_Field_Kind): uint64 =
    sizeOfUInt32(uint32(value))

proc readgoogle_protobuf_Field_Cardinality*(stream: ProtobufStream): google_protobuf_Field_Cardinality =
    google_protobuf_Field_Cardinality(readUInt32(stream))

proc writegoogle_protobuf_Field_Cardinality*(stream: ProtobufStream, value: google_protobuf_Field_Cardinality) =
    writeUInt32(stream, uint32(value))

proc sizeOfgoogle_protobuf_Field_Cardinality*(value: google_protobuf_Field_Cardinality): uint64 =
    sizeOfUInt32(uint32(value))

proc newgoogle_protobuf_Option*(): google_protobuf_Option
proc writegoogle_protobuf_Option*(stream: ProtobufStream, message: google_protobuf_Option)
proc readgoogle_protobuf_Option*(stream: ProtobufStream): google_protobuf_Option
proc sizeOfgoogle_protobuf_Option*(message: google_protobuf_Option): uint64

proc newgoogle_protobuf_Field*(): google_protobuf_Field
proc writegoogle_protobuf_Field*(stream: ProtobufStream, message: google_protobuf_Field)
proc readgoogle_protobuf_Field*(stream: ProtobufStream): google_protobuf_Field
proc sizeOfgoogle_protobuf_Field*(message: google_protobuf_Field): uint64

proc newgoogle_protobuf_Type*(): google_protobuf_Type
proc writegoogle_protobuf_Type*(stream: ProtobufStream, message: google_protobuf_Type)
proc readgoogle_protobuf_Type*(stream: ProtobufStream): google_protobuf_Type
proc sizeOfgoogle_protobuf_Type*(message: google_protobuf_Type): uint64

proc newgoogle_protobuf_EnumValue*(): google_protobuf_EnumValue
proc writegoogle_protobuf_EnumValue*(stream: ProtobufStream, message: google_protobuf_EnumValue)
proc readgoogle_protobuf_EnumValue*(stream: ProtobufStream): google_protobuf_EnumValue
proc sizeOfgoogle_protobuf_EnumValue*(message: google_protobuf_EnumValue): uint64

proc newgoogle_protobuf_Enum*(): google_protobuf_Enum
proc writegoogle_protobuf_Enum*(stream: ProtobufStream, message: google_protobuf_Enum)
proc readgoogle_protobuf_Enum*(stream: ProtobufStream): google_protobuf_Enum
proc sizeOfgoogle_protobuf_Enum*(message: google_protobuf_Enum): uint64

proc newgoogle_protobuf_Option*(): google_protobuf_Option =
    new(result)
    result.hasField = initIntSet()
    result.name = ""
    result.value = nil

proc clearname*(message: google_protobuf_Option) =
    message.name = ""
    excl(message.hasField, 1)

proc hasname*(message: google_protobuf_Option): bool =
    result = contains(message.hasField, 1)

proc setname*(message: google_protobuf_Option, value: string) =
    message.name = value
    incl(message.hasField, 1)

proc name*(message: google_protobuf_Option): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Option, value: string) {.inline.} =
    setname(message, value)

proc clearvalue*(message: google_protobuf_Option) =
    message.value = nil
    excl(message.hasField, 2)

proc hasvalue*(message: google_protobuf_Option): bool =
    result = contains(message.hasField, 2)

proc setvalue*(message: google_protobuf_Option, value: google_protobuf_Any) =
    message.value = value
    incl(message.hasField, 2)

proc value*(message: google_protobuf_Option): google_protobuf_Any {.inline.} =
    message.value

proc `value=`*(message: google_protobuf_Option, value: google_protobuf_Any) {.inline.} =
    setvalue(message, value)

proc sizeOfgoogle_protobuf_Option*(message: google_protobuf_Option): uint64 =
    if hasname(message):
        let
            sizeOfField = sizeOfString(message.name)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(1, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
    if hasvalue(message):
        let
            sizeOfField = sizeOfgoogle_protobuf_Any(message.value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(2, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
        result = result + sizeOfUInt64(sizeOfField)

proc writegoogle_protobuf_Option*(stream: ProtobufStream, message: google_protobuf_Option) =
    if hasname(message):
        writeTag(stream, 1, WireType.LengthDelimited)
        writeString(stream, message.name)
    if hasvalue(message):
        writeTag(stream, 2, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_Any(message.value))
        writegoogle_protobuf_Any(stream, message.value)

proc readgoogle_protobuf_Option*(stream: ProtobufStream): google_protobuf_Option =
    result = newgoogle_protobuf_Option()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = getTagWireType(tag)
        case getTagFieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, readString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            setvalue(result, readgoogle_protobuf_Any(pbs))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_Option): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_Option(pbs, message)
    result = ss.data

proc newgoogle_protobuf_Option*(data: string): google_protobuf_Option =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_Option(pbs)


proc newgoogle_protobuf_Field*(): google_protobuf_Field =
    new(result)
    result.hasField = initIntSet()
    result.kind = google_protobuf_Field_Kind(0)
    result.cardinality = google_protobuf_Field_Cardinality(0)
    result.number = 0
    result.name = ""
    result.type_url = ""
    result.oneof_index = 0
    result.packed = false
    result.options = @[]
    result.json_name = ""
    result.default_value = ""

proc clearkind*(message: google_protobuf_Field) =
    message.kind = google_protobuf_Field_Kind(0)
    excl(message.hasField, 1)

proc haskind*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 1)

proc setkind*(message: google_protobuf_Field, value: google_protobuf_Field_Kind) =
    message.kind = value
    incl(message.hasField, 1)

proc kind*(message: google_protobuf_Field): google_protobuf_Field_Kind {.inline.} =
    message.kind

proc `kind=`*(message: google_protobuf_Field, value: google_protobuf_Field_Kind) {.inline.} =
    setkind(message, value)

proc clearcardinality*(message: google_protobuf_Field) =
    message.cardinality = google_protobuf_Field_Cardinality(0)
    excl(message.hasField, 2)

proc hascardinality*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 2)

proc setcardinality*(message: google_protobuf_Field, value: google_protobuf_Field_Cardinality) =
    message.cardinality = value
    incl(message.hasField, 2)

proc cardinality*(message: google_protobuf_Field): google_protobuf_Field_Cardinality {.inline.} =
    message.cardinality

proc `cardinality=`*(message: google_protobuf_Field, value: google_protobuf_Field_Cardinality) {.inline.} =
    setcardinality(message, value)

proc clearnumber*(message: google_protobuf_Field) =
    message.number = 0
    excl(message.hasField, 3)

proc hasnumber*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 3)

proc setnumber*(message: google_protobuf_Field, value: int32) =
    message.number = value
    incl(message.hasField, 3)

proc number*(message: google_protobuf_Field): int32 {.inline.} =
    message.number

proc `number=`*(message: google_protobuf_Field, value: int32) {.inline.} =
    setnumber(message, value)

proc clearname*(message: google_protobuf_Field) =
    message.name = ""
    excl(message.hasField, 4)

proc hasname*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 4)

proc setname*(message: google_protobuf_Field, value: string) =
    message.name = value
    incl(message.hasField, 4)

proc name*(message: google_protobuf_Field): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setname(message, value)

proc cleartype_url*(message: google_protobuf_Field) =
    message.type_url = ""
    excl(message.hasField, 6)

proc hastype_url*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 6)

proc settype_url*(message: google_protobuf_Field, value: string) =
    message.type_url = value
    incl(message.hasField, 6)

proc type_url*(message: google_protobuf_Field): string {.inline.} =
    message.type_url

proc `type_url=`*(message: google_protobuf_Field, value: string) {.inline.} =
    settype_url(message, value)

proc clearoneof_index*(message: google_protobuf_Field) =
    message.oneof_index = 0
    excl(message.hasField, 7)

proc hasoneof_index*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 7)

proc setoneof_index*(message: google_protobuf_Field, value: int32) =
    message.oneof_index = value
    incl(message.hasField, 7)

proc oneof_index*(message: google_protobuf_Field): int32 {.inline.} =
    message.oneof_index

proc `oneof_index=`*(message: google_protobuf_Field, value: int32) {.inline.} =
    setoneof_index(message, value)

proc clearpacked*(message: google_protobuf_Field) =
    message.packed = false
    excl(message.hasField, 8)

proc haspacked*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 8)

proc setpacked*(message: google_protobuf_Field, value: bool) =
    message.packed = value
    incl(message.hasField, 8)

proc packed*(message: google_protobuf_Field): bool {.inline.} =
    message.packed

proc `packed=`*(message: google_protobuf_Field, value: bool) {.inline.} =
    setpacked(message, value)

proc clearoptions*(message: google_protobuf_Field) =
    message.options = @[]
    excl(message.hasField, 9)

proc hasoptions*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 9)

proc setoptions*(message: google_protobuf_Field, value: seq[google_protobuf_Option]) =
    message.options = value
    incl(message.hasField, 9)

proc addoptions*(message: google_protobuf_Field, value: google_protobuf_Option) =
    add(message.options, value)
    incl(message.hasField, 9)

proc options*(message: google_protobuf_Field): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Field, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearjson_name*(message: google_protobuf_Field) =
    message.json_name = ""
    excl(message.hasField, 10)

proc hasjson_name*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 10)

proc setjson_name*(message: google_protobuf_Field, value: string) =
    message.json_name = value
    incl(message.hasField, 10)

proc json_name*(message: google_protobuf_Field): string {.inline.} =
    message.json_name

proc `json_name=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setjson_name(message, value)

proc cleardefault_value*(message: google_protobuf_Field) =
    message.default_value = ""
    excl(message.hasField, 11)

proc hasdefault_value*(message: google_protobuf_Field): bool =
    result = contains(message.hasField, 11)

proc setdefault_value*(message: google_protobuf_Field, value: string) =
    message.default_value = value
    incl(message.hasField, 11)

proc default_value*(message: google_protobuf_Field): string {.inline.} =
    message.default_value

proc `default_value=`*(message: google_protobuf_Field, value: string) {.inline.} =
    setdefault_value(message, value)

proc sizeOfgoogle_protobuf_Field*(message: google_protobuf_Field): uint64 =
    if haskind(message):
        let
            sizeOfField = sizeOfgoogle_protobuf_Field_Kind(message.kind)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(1, WireType.Varint)))
        result = result + sizeOfField + sizeOfTag
    if hascardinality(message):
        let
            sizeOfField = sizeOfgoogle_protobuf_Field_Cardinality(message.cardinality)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(2, WireType.Varint)))
        result = result + sizeOfField + sizeOfTag
    if hasnumber(message):
        let
            sizeOfField = sizeOfInt32(message.number)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(3, WireType.Varint)))
        result = result + sizeOfField + sizeOfTag
    if hasname(message):
        let
            sizeOfField = sizeOfString(message.name)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(4, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
    if hastype_url(message):
        let
            sizeOfField = sizeOfString(message.type_url)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(6, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
    if hasoneof_index(message):
        let
            sizeOfField = sizeOfInt32(message.oneof_index)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(7, WireType.Varint)))
        result = result + sizeOfField + sizeOfTag
    if haspacked(message):
        let
            sizeOfField = sizeOfBool(message.packed)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(8, WireType.Varint)))
        result = result + sizeOfField + sizeOfTag
    for value in message.options:
        let
            sizeOfValue = sizeOfgoogle_protobuf_Option(value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(9, WireType.LengthDelimited)))
        result = result + sizeOfValue + sizeOfTag
    
        result = result + sizeOfUInt64(sizeOfValue)
    if hasjson_name(message):
        let
            sizeOfField = sizeOfString(message.json_name)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(10, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
    if hasdefault_value(message):
        let
            sizeOfField = sizeOfString(message.default_value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(11, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag

proc writegoogle_protobuf_Field*(stream: ProtobufStream, message: google_protobuf_Field) =
    if haskind(message):
        writeTag(stream, 1, WireType.Varint)
        writegoogle_protobuf_Field_Kind(stream, message.kind)
    if hascardinality(message):
        writeTag(stream, 2, WireType.Varint)
        writegoogle_protobuf_Field_Cardinality(stream, message.cardinality)
    if hasnumber(message):
        writeTag(stream, 3, WireType.Varint)
        writeInt32(stream, message.number)
    if hasname(message):
        writeTag(stream, 4, WireType.LengthDelimited)
        writeString(stream, message.name)
    if hastype_url(message):
        writeTag(stream, 6, WireType.LengthDelimited)
        writeString(stream, message.type_url)
    if hasoneof_index(message):
        writeTag(stream, 7, WireType.Varint)
        writeInt32(stream, message.oneof_index)
    if haspacked(message):
        writeTag(stream, 8, WireType.Varint)
        writeBool(stream, message.packed)
    for value in message.options:
        writeTag(stream, 9, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_Option(value))
        writegoogle_protobuf_Option(stream, value)
    if hasjson_name(message):
        writeTag(stream, 10, WireType.LengthDelimited)
        writeString(stream, message.json_name)
    if hasdefault_value(message):
        writeTag(stream, 11, WireType.LengthDelimited)
        writeString(stream, message.default_value)

proc readgoogle_protobuf_Field*(stream: ProtobufStream): google_protobuf_Field =
    result = newgoogle_protobuf_Field()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = getTagWireType(tag)
        case getTagFieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.Varint)
            setkind(result, readgoogle_protobuf_Field_Kind(stream))
        of 2:
            expectWireType(wireType, WireType.Varint)
            setcardinality(result, readgoogle_protobuf_Field_Cardinality(stream))
        of 3:
            expectWireType(wireType, WireType.Varint)
            setnumber(result, readInt32(stream))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, readString(stream))
        of 6:
            expectWireType(wireType, WireType.LengthDelimited)
            settype_url(result, readString(stream))
        of 7:
            expectWireType(wireType, WireType.Varint)
            setoneof_index(result, readInt32(stream))
        of 8:
            expectWireType(wireType, WireType.Varint)
            setpacked(result, readBool(stream))
        of 9:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            addoptions(result, readgoogle_protobuf_Option(pbs))
        of 10:
            expectWireType(wireType, WireType.LengthDelimited)
            setjson_name(result, readString(stream))
        of 11:
            expectWireType(wireType, WireType.LengthDelimited)
            setdefault_value(result, readString(stream))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_Field): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_Field(pbs, message)
    result = ss.data

proc newgoogle_protobuf_Field*(data: string): google_protobuf_Field =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_Field(pbs)


proc newgoogle_protobuf_Type*(): google_protobuf_Type =
    new(result)
    result.hasField = initIntSet()
    result.name = ""
    result.fields = @[]
    result.oneofs = @[]
    result.options = @[]
    result.source_context = nil
    result.syntax = google_protobuf_Syntax(0)

proc clearname*(message: google_protobuf_Type) =
    message.name = ""
    excl(message.hasField, 1)

proc hasname*(message: google_protobuf_Type): bool =
    result = contains(message.hasField, 1)

proc setname*(message: google_protobuf_Type, value: string) =
    message.name = value
    incl(message.hasField, 1)

proc name*(message: google_protobuf_Type): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Type, value: string) {.inline.} =
    setname(message, value)

proc clearfields*(message: google_protobuf_Type) =
    message.fields = @[]
    excl(message.hasField, 2)

proc hasfields*(message: google_protobuf_Type): bool =
    result = contains(message.hasField, 2)

proc setfields*(message: google_protobuf_Type, value: seq[google_protobuf_Field]) =
    message.fields = value
    incl(message.hasField, 2)

proc addfields*(message: google_protobuf_Type, value: google_protobuf_Field) =
    add(message.fields, value)
    incl(message.hasField, 2)

proc fields*(message: google_protobuf_Type): seq[google_protobuf_Field] {.inline.} =
    message.fields

proc `fields=`*(message: google_protobuf_Type, value: seq[google_protobuf_Field]) {.inline.} =
    setfields(message, value)

proc clearoneofs*(message: google_protobuf_Type) =
    message.oneofs = @[]
    excl(message.hasField, 3)

proc hasoneofs*(message: google_protobuf_Type): bool =
    result = contains(message.hasField, 3)

proc setoneofs*(message: google_protobuf_Type, value: seq[string]) =
    message.oneofs = value
    incl(message.hasField, 3)

proc addoneofs*(message: google_protobuf_Type, value: string) =
    add(message.oneofs, value)
    incl(message.hasField, 3)

proc oneofs*(message: google_protobuf_Type): seq[string] {.inline.} =
    message.oneofs

proc `oneofs=`*(message: google_protobuf_Type, value: seq[string]) {.inline.} =
    setoneofs(message, value)

proc clearoptions*(message: google_protobuf_Type) =
    message.options = @[]
    excl(message.hasField, 4)

proc hasoptions*(message: google_protobuf_Type): bool =
    result = contains(message.hasField, 4)

proc setoptions*(message: google_protobuf_Type, value: seq[google_protobuf_Option]) =
    message.options = value
    incl(message.hasField, 4)

proc addoptions*(message: google_protobuf_Type, value: google_protobuf_Option) =
    add(message.options, value)
    incl(message.hasField, 4)

proc options*(message: google_protobuf_Type): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Type, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearsource_context*(message: google_protobuf_Type) =
    message.source_context = nil
    excl(message.hasField, 5)

proc hassource_context*(message: google_protobuf_Type): bool =
    result = contains(message.hasField, 5)

proc setsource_context*(message: google_protobuf_Type, value: google_protobuf_SourceContext) =
    message.source_context = value
    incl(message.hasField, 5)

proc source_context*(message: google_protobuf_Type): google_protobuf_SourceContext {.inline.} =
    message.source_context

proc `source_context=`*(message: google_protobuf_Type, value: google_protobuf_SourceContext) {.inline.} =
    setsource_context(message, value)

proc clearsyntax*(message: google_protobuf_Type) =
    message.syntax = google_protobuf_Syntax(0)
    excl(message.hasField, 6)

proc hassyntax*(message: google_protobuf_Type): bool =
    result = contains(message.hasField, 6)

proc setsyntax*(message: google_protobuf_Type, value: google_protobuf_Syntax) =
    message.syntax = value
    incl(message.hasField, 6)

proc syntax*(message: google_protobuf_Type): google_protobuf_Syntax {.inline.} =
    message.syntax

proc `syntax=`*(message: google_protobuf_Type, value: google_protobuf_Syntax) {.inline.} =
    setsyntax(message, value)

proc sizeOfgoogle_protobuf_Type*(message: google_protobuf_Type): uint64 =
    if hasname(message):
        let
            sizeOfField = sizeOfString(message.name)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(1, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
    for value in message.fields:
        let
            sizeOfValue = sizeOfgoogle_protobuf_Field(value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(2, WireType.LengthDelimited)))
        result = result + sizeOfValue + sizeOfTag
    
        result = result + sizeOfUInt64(sizeOfValue)
    for value in message.oneofs:
        let
            sizeOfValue = sizeOfString(value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(3, WireType.LengthDelimited)))
        result = result + sizeOfValue + sizeOfTag
    
    for value in message.options:
        let
            sizeOfValue = sizeOfgoogle_protobuf_Option(value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(4, WireType.LengthDelimited)))
        result = result + sizeOfValue + sizeOfTag
    
        result = result + sizeOfUInt64(sizeOfValue)
    if hassource_context(message):
        let
            sizeOfField = sizeOfgoogle_protobuf_SourceContext(message.source_context)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(5, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
        result = result + sizeOfUInt64(sizeOfField)
    if hassyntax(message):
        let
            sizeOfField = sizeOfgoogle_protobuf_Syntax(message.syntax)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(6, WireType.Varint)))
        result = result + sizeOfField + sizeOfTag

proc writegoogle_protobuf_Type*(stream: ProtobufStream, message: google_protobuf_Type) =
    if hasname(message):
        writeTag(stream, 1, WireType.LengthDelimited)
        writeString(stream, message.name)
    for value in message.fields:
        writeTag(stream, 2, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_Field(value))
        writegoogle_protobuf_Field(stream, value)
    for value in message.oneofs:
        writeTag(stream, 3, WireType.LengthDelimited)
        writeString(stream, value)
    for value in message.options:
        writeTag(stream, 4, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_Option(value))
        writegoogle_protobuf_Option(stream, value)
    if hassource_context(message):
        writeTag(stream, 5, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_SourceContext(message.source_context))
        writegoogle_protobuf_SourceContext(stream, message.source_context)
    if hassyntax(message):
        writeTag(stream, 6, WireType.Varint)
        writegoogle_protobuf_Syntax(stream, message.syntax)

proc readgoogle_protobuf_Type*(stream: ProtobufStream): google_protobuf_Type =
    result = newgoogle_protobuf_Type()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = getTagWireType(tag)
        case getTagFieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, readString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            addfields(result, readgoogle_protobuf_Field(pbs))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            addoneofs(result, readString(stream))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            addoptions(result, readgoogle_protobuf_Option(pbs))
        of 5:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            setsource_context(result, readgoogle_protobuf_SourceContext(pbs))
        of 6:
            expectWireType(wireType, WireType.Varint)
            setsyntax(result, readgoogle_protobuf_Syntax(stream))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_Type): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_Type(pbs, message)
    result = ss.data

proc newgoogle_protobuf_Type*(data: string): google_protobuf_Type =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_Type(pbs)


proc newgoogle_protobuf_EnumValue*(): google_protobuf_EnumValue =
    new(result)
    result.hasField = initIntSet()
    result.name = ""
    result.number = 0
    result.options = @[]

proc clearname*(message: google_protobuf_EnumValue) =
    message.name = ""
    excl(message.hasField, 1)

proc hasname*(message: google_protobuf_EnumValue): bool =
    result = contains(message.hasField, 1)

proc setname*(message: google_protobuf_EnumValue, value: string) =
    message.name = value
    incl(message.hasField, 1)

proc name*(message: google_protobuf_EnumValue): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_EnumValue, value: string) {.inline.} =
    setname(message, value)

proc clearnumber*(message: google_protobuf_EnumValue) =
    message.number = 0
    excl(message.hasField, 2)

proc hasnumber*(message: google_protobuf_EnumValue): bool =
    result = contains(message.hasField, 2)

proc setnumber*(message: google_protobuf_EnumValue, value: int32) =
    message.number = value
    incl(message.hasField, 2)

proc number*(message: google_protobuf_EnumValue): int32 {.inline.} =
    message.number

proc `number=`*(message: google_protobuf_EnumValue, value: int32) {.inline.} =
    setnumber(message, value)

proc clearoptions*(message: google_protobuf_EnumValue) =
    message.options = @[]
    excl(message.hasField, 3)

proc hasoptions*(message: google_protobuf_EnumValue): bool =
    result = contains(message.hasField, 3)

proc setoptions*(message: google_protobuf_EnumValue, value: seq[google_protobuf_Option]) =
    message.options = value
    incl(message.hasField, 3)

proc addoptions*(message: google_protobuf_EnumValue, value: google_protobuf_Option) =
    add(message.options, value)
    incl(message.hasField, 3)

proc options*(message: google_protobuf_EnumValue): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_EnumValue, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc sizeOfgoogle_protobuf_EnumValue*(message: google_protobuf_EnumValue): uint64 =
    if hasname(message):
        let
            sizeOfField = sizeOfString(message.name)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(1, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
    if hasnumber(message):
        let
            sizeOfField = sizeOfInt32(message.number)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(2, WireType.Varint)))
        result = result + sizeOfField + sizeOfTag
    for value in message.options:
        let
            sizeOfValue = sizeOfgoogle_protobuf_Option(value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(3, WireType.LengthDelimited)))
        result = result + sizeOfValue + sizeOfTag
    
        result = result + sizeOfUInt64(sizeOfValue)

proc writegoogle_protobuf_EnumValue*(stream: ProtobufStream, message: google_protobuf_EnumValue) =
    if hasname(message):
        writeTag(stream, 1, WireType.LengthDelimited)
        writeString(stream, message.name)
    if hasnumber(message):
        writeTag(stream, 2, WireType.Varint)
        writeInt32(stream, message.number)
    for value in message.options:
        writeTag(stream, 3, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_Option(value))
        writegoogle_protobuf_Option(stream, value)

proc readgoogle_protobuf_EnumValue*(stream: ProtobufStream): google_protobuf_EnumValue =
    result = newgoogle_protobuf_EnumValue()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = getTagWireType(tag)
        case getTagFieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, readString(stream))
        of 2:
            expectWireType(wireType, WireType.Varint)
            setnumber(result, readInt32(stream))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            addoptions(result, readgoogle_protobuf_Option(pbs))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_EnumValue): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_EnumValue(pbs, message)
    result = ss.data

proc newgoogle_protobuf_EnumValue*(data: string): google_protobuf_EnumValue =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_EnumValue(pbs)


proc newgoogle_protobuf_Enum*(): google_protobuf_Enum =
    new(result)
    result.hasField = initIntSet()
    result.name = ""
    result.enumvalue = @[]
    result.options = @[]
    result.source_context = nil
    result.syntax = google_protobuf_Syntax(0)

proc clearname*(message: google_protobuf_Enum) =
    message.name = ""
    excl(message.hasField, 1)

proc hasname*(message: google_protobuf_Enum): bool =
    result = contains(message.hasField, 1)

proc setname*(message: google_protobuf_Enum, value: string) =
    message.name = value
    incl(message.hasField, 1)

proc name*(message: google_protobuf_Enum): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_Enum, value: string) {.inline.} =
    setname(message, value)

proc clearenumvalue*(message: google_protobuf_Enum) =
    message.enumvalue = @[]
    excl(message.hasField, 2)

proc hasenumvalue*(message: google_protobuf_Enum): bool =
    result = contains(message.hasField, 2)

proc setenumvalue*(message: google_protobuf_Enum, value: seq[google_protobuf_EnumValue]) =
    message.enumvalue = value
    incl(message.hasField, 2)

proc addenumvalue*(message: google_protobuf_Enum, value: google_protobuf_EnumValue) =
    add(message.enumvalue, value)
    incl(message.hasField, 2)

proc enumvalue*(message: google_protobuf_Enum): seq[google_protobuf_EnumValue] {.inline.} =
    message.enumvalue

proc `enumvalue=`*(message: google_protobuf_Enum, value: seq[google_protobuf_EnumValue]) {.inline.} =
    setenumvalue(message, value)

proc clearoptions*(message: google_protobuf_Enum) =
    message.options = @[]
    excl(message.hasField, 3)

proc hasoptions*(message: google_protobuf_Enum): bool =
    result = contains(message.hasField, 3)

proc setoptions*(message: google_protobuf_Enum, value: seq[google_protobuf_Option]) =
    message.options = value
    incl(message.hasField, 3)

proc addoptions*(message: google_protobuf_Enum, value: google_protobuf_Option) =
    add(message.options, value)
    incl(message.hasField, 3)

proc options*(message: google_protobuf_Enum): seq[google_protobuf_Option] {.inline.} =
    message.options

proc `options=`*(message: google_protobuf_Enum, value: seq[google_protobuf_Option]) {.inline.} =
    setoptions(message, value)

proc clearsource_context*(message: google_protobuf_Enum) =
    message.source_context = nil
    excl(message.hasField, 4)

proc hassource_context*(message: google_protobuf_Enum): bool =
    result = contains(message.hasField, 4)

proc setsource_context*(message: google_protobuf_Enum, value: google_protobuf_SourceContext) =
    message.source_context = value
    incl(message.hasField, 4)

proc source_context*(message: google_protobuf_Enum): google_protobuf_SourceContext {.inline.} =
    message.source_context

proc `source_context=`*(message: google_protobuf_Enum, value: google_protobuf_SourceContext) {.inline.} =
    setsource_context(message, value)

proc clearsyntax*(message: google_protobuf_Enum) =
    message.syntax = google_protobuf_Syntax(0)
    excl(message.hasField, 5)

proc hassyntax*(message: google_protobuf_Enum): bool =
    result = contains(message.hasField, 5)

proc setsyntax*(message: google_protobuf_Enum, value: google_protobuf_Syntax) =
    message.syntax = value
    incl(message.hasField, 5)

proc syntax*(message: google_protobuf_Enum): google_protobuf_Syntax {.inline.} =
    message.syntax

proc `syntax=`*(message: google_protobuf_Enum, value: google_protobuf_Syntax) {.inline.} =
    setsyntax(message, value)

proc sizeOfgoogle_protobuf_Enum*(message: google_protobuf_Enum): uint64 =
    if hasname(message):
        let
            sizeOfField = sizeOfString(message.name)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(1, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
    for value in message.enumvalue:
        let
            sizeOfValue = sizeOfgoogle_protobuf_EnumValue(value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(2, WireType.LengthDelimited)))
        result = result + sizeOfValue + sizeOfTag
    
        result = result + sizeOfUInt64(sizeOfValue)
    for value in message.options:
        let
            sizeOfValue = sizeOfgoogle_protobuf_Option(value)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(3, WireType.LengthDelimited)))
        result = result + sizeOfValue + sizeOfTag
    
        result = result + sizeOfUInt64(sizeOfValue)
    if hassource_context(message):
        let
            sizeOfField = sizeOfgoogle_protobuf_SourceContext(message.source_context)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(4, WireType.LengthDelimited)))
        result = result + sizeOfField + sizeOfTag
        result = result + sizeOfUInt64(sizeOfField)
    if hassyntax(message):
        let
            sizeOfField = sizeOfgoogle_protobuf_Syntax(message.syntax)
            sizeOfTag = sizeOfUInt32(uint32(makeTag(5, WireType.Varint)))
        result = result + sizeOfField + sizeOfTag

proc writegoogle_protobuf_Enum*(stream: ProtobufStream, message: google_protobuf_Enum) =
    if hasname(message):
        writeTag(stream, 1, WireType.LengthDelimited)
        writeString(stream, message.name)
    for value in message.enumvalue:
        writeTag(stream, 2, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_EnumValue(value))
        writegoogle_protobuf_EnumValue(stream, value)
    for value in message.options:
        writeTag(stream, 3, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_Option(value))
        writegoogle_protobuf_Option(stream, value)
    if hassource_context(message):
        writeTag(stream, 4, WireType.LengthDelimited)
        writeVarint(stream, sizeOfgoogle_protobuf_SourceContext(message.source_context))
        writegoogle_protobuf_SourceContext(stream, message.source_context)
    if hassyntax(message):
        writeTag(stream, 5, WireType.Varint)
        writegoogle_protobuf_Syntax(stream, message.syntax)

proc readgoogle_protobuf_Enum*(stream: ProtobufStream): google_protobuf_Enum =
    result = newgoogle_protobuf_Enum()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = getTagWireType(tag)
        case getTagFieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, readString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            addenumvalue(result, readgoogle_protobuf_EnumValue(pbs))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            addoptions(result, readgoogle_protobuf_Option(pbs))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            setsource_context(result, readgoogle_protobuf_SourceContext(pbs))
        of 5:
            expectWireType(wireType, WireType.Varint)
            setsyntax(result, readgoogle_protobuf_Syntax(stream))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_Enum): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_Enum(pbs, message)
    result = ss.data

proc newgoogle_protobuf_Enum*(data: string): google_protobuf_Enum =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_Enum(pbs)


