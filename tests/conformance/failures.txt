[libprotobuf ERROR google/protobuf/wire_format_lite.cc:629] String field 'conformance.ConformanceResponse.json_payload' contains invalid UTF-8 data when parsing a protocol buffer. Use the 'bytes' type if you intend to send raw bytes. 

CONFORMANCE TEST BEGIN ====================================

ERROR, test=Required.Proto3.ProtobufInput.RepeatedScalarSelectsLast.DOUBLE.JsonOutput: Output was not equivalent to reference message: modified: optional_double: 2.2250738585072014e-308 -> 2.2250738585072009e-308
. request=protobuf_payload: "a\232\231\231\231\231\231\271?a\377\377\377\377\377\377\357\177a\000\000\000\000\000\000\020\000" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalDouble\":2.225073858507201e-308}"
ERROR, test=Required.Proto3.ProtobufInput.ValidDataRepeated.DOUBLE.JsonOutput: JSON output we received from test was unparseable. request=protobuf_payload: "\321\002\232\231\231\231\231\231\271?\321\002\377\377\377\377\377\377\357\177\321\002\000\000\000\000\000\000\020\000" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"repeatedDouble\":[0.1,1.797693134862316e+308,2.225073858507201e-308]}"
WARNING, test=Recommended.Proto3.JsonInput.TrailingCommaInAnObject: Should have failed to parse, but didn't. request=json_payload: "{\"fieldname1\":1,}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"fieldname1\":1}"
WARNING, test=Recommended.Proto3.JsonInput.TrailingCommaInAnObjectWithSpace: Should have failed to parse, but didn't. request=json_payload: "{\"fieldname1\":1 ,}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"fieldname1\":1}"
WARNING, test=Recommended.Proto3.JsonInput.TrailingCommaInAnObjectWithSpaceCommaSpace: Should have failed to parse, but didn't. request=json_payload: "{\"fieldname1\":1 , }" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"fieldname1\":1}"
WARNING, test=Recommended.Proto3.JsonInput.TrailingCommaInAnObjectWithNewlines: Should have failed to parse, but didn't. request=json_payload: "{\n        \"fieldname1\":1,\n      }" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"fieldname1\":1}"
WARNING, test=Recommended.Proto3.JsonInput.JsonWithComments: Should have failed to parse, but didn't. request=json_payload: "{\n        // This is a comment.\n        \"fieldname1\": 1\n      }" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"fieldname1\":1}"
ERROR, test=Required.Proto3.JsonInput.Uint64FieldMaxValueNotQuoted.ProtobufOutput: Failed to parse input or produce output. request=json_payload: "{\"optionalUint64\": 18446744073709549568}" requested_output_format: PROTOBUF message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=parse_error: "JsonParsingError: Parsed integer outside of valid range\n/home/oswjk/dev/nimpb/tests/conformance/conformance_nim.nim(64) conformance_nim\n"
ERROR, test=Required.Proto3.JsonInput.Uint64FieldMaxValueNotQuoted.JsonOutput: Failed to parse input or produce output. request=json_payload: "{\"optionalUint64\": 18446744073709549568}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=parse_error: "JsonParsingError: Parsed integer outside of valid range\n/home/oswjk/dev/nimpb/tests/conformance/conformance_nim.nim(64) conformance_nim\n"
ERROR, test=Required.Proto3.JsonInput.Int32FieldLeadingZero: Should have failed to parse, but didn't. request=json_payload: "{\"optionalInt32\": 01}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalInt32\":1}"
ERROR, test=Required.Proto3.JsonInput.Int32FieldNegativeWithLeadingZero: Should have failed to parse, but didn't. request=json_payload: "{\"optionalInt32\": -01}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalInt32\":-1}"
WARNING, test=Recommended.Proto3.JsonInput.StringFieldUppercaseEscapeLetter: Should have failed to parse, but didn't. request=json_payload: "{\"optionalString\": \"\\U8C37\\U6b4C\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalString\":\"\\\\U8C37\\\\U6b4C\"}"
WARNING, test=Recommended.Proto3.JsonInput.StringFieldUnpairedLowSurrogate: Should have failed to parse, but didn't. request=json_payload: "{\"optionalString\": \"\\uDC00\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=runtime_error: "response proto could not be parsed."
WARNING, test=Recommended.Proto3.JsonInput.BytesFieldBase64Url.ProtobufOutput: Failed to parse input or produce output. request=json_payload: "{\"optionalBytes\": \"-_\"}" requested_output_format: PROTOBUF message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=runtime_error: "AssertionError: /home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/pure/base64.nim(186, 10) `i == s.len` \n/home/oswjk/dev/nimpb/tests/conformance/conformance_nim.nim(66) conformance_nim\n/home/oswjk/dev/nimpb/tests/conformance/test_messages_proto3_pb.nim(4810) parseprotobuf_test_messages_proto3_TestAllTypesProto3\n/home/oswjk/dev/nimpb/nimpb/json.nim(132) parseBytes\n/home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/pure/base64.nim(186) decode\n/home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/system/assertions.nim(27) failedAssertImpl\n/home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/system/assertions.nim(20) raiseAssert\n/home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/system/fatal.nim(39) sysFatal\n"
WARNING, test=Recommended.Proto3.JsonInput.BytesFieldBase64Url.JsonOutput: Failed to parse input or produce output. request=json_payload: "{\"optionalBytes\": \"-_\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=runtime_error: "AssertionError: /home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/pure/base64.nim(186, 10) `i == s.len` \n/home/oswjk/dev/nimpb/tests/conformance/conformance_nim.nim(66) conformance_nim\n/home/oswjk/dev/nimpb/tests/conformance/test_messages_proto3_pb.nim(4810) parseprotobuf_test_messages_proto3_TestAllTypesProto3\n/home/oswjk/dev/nimpb/nimpb/json.nim(132) parseBytes\n/home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/pure/base64.nim(186) decode\n/home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/system/assertions.nim(27) failedAssertImpl\n/home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/system/assertions.nim(20) raiseAssert\n/home/oswjk/.choosenim/toolchains/nim-1.0.0/lib/system/fatal.nim(39) sysFatal\n"
WARNING, test=Recommended.Proto3.JsonInput.RepeatedFieldTrailingComma: Should have failed to parse, but didn't. request=json_payload: "{\"repeatedInt32\": [1, 2, 3, 4,]}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"repeatedInt32\":[1,2,3,4]}"
WARNING, test=Recommended.Proto3.JsonInput.RepeatedFieldTrailingCommaWithSpace: Should have failed to parse, but didn't. request=json_payload: "{\"repeatedInt32\": [1, 2, 3, 4 ,]}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"repeatedInt32\":[1,2,3,4]}"
WARNING, test=Recommended.Proto3.JsonInput.RepeatedFieldTrailingCommaWithSpaceCommaSpace: Should have failed to parse, but didn't. request=json_payload: "{\"repeatedInt32\": [1, 2, 3, 4 , ]}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"repeatedInt32\":[1,2,3,4]}"
WARNING, test=Recommended.Proto3.JsonInput.RepeatedFieldTrailingCommaWithNewlines: Should have failed to parse, but didn't. request=json_payload: "{\"repeatedInt32\": [\n  1,\n  2,\n  3,\n  4,\n]}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"repeatedInt32\":[1,2,3,4]}"
WARNING, test=Recommended.Proto3.JsonInput.DurationHasZeroFractionalDigit.Validator: Expected JSON payload but got type 6. request=json_payload: "{\"optionalDuration\": \"1.000000000s\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=serialize_error: "ValueError: different sign for seconds and nanos\n/home/oswjk/dev/nimpb/tests/conformance/conformance_nim.nim(72) conformance_nim\n/home/oswjk/dev/nimpb/tests/conformance/test_messages_proto3_pb.nim(4683) toJson\n/home/oswjk/dev/nimpb/nimpb/wkt/duration.nim(19) toJson\n"
WARNING, test=Recommended.Proto3.JsonInput.DurationHas3FractionalDigits.Validator: JSON payload validation failed. request=json_payload: "{\"optionalDuration\": \"1.010000000s\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalDuration\":\"1.01s\"}"
WARNING, test=Recommended.Proto3.JsonInput.DurationHas6FractionalDigits.Validator: JSON payload validation failed. request=json_payload: "{\"optionalDuration\": \"1.000010000s\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalDuration\":\"1.00001s\"}"
WARNING, test=Recommended.Proto3.JsonInput.DurationHas9FractionalDigits.Validator: JSON payload validation failed. request=json_payload: "{\"optionalDuration\": \"1.000000010s\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalDuration\":\"1.00000001s\"}"
WARNING, test=Recommended.Proto3.JsonInput.TimestampHas3FractionalDigits.Validator: JSON payload validation failed. request=json_payload: "{\"optionalTimestamp\": \"1970-01-01T00:00:00.010000000Z\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalTimestamp\":\"1970-01-01T00:00:00.01Z\"}"
WARNING, test=Recommended.Proto3.JsonInput.TimestampHas6FractionalDigits.Validator: JSON payload validation failed. request=json_payload: "{\"optionalTimestamp\": \"1970-01-01T00:00:00.000010000Z\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalTimestamp\":\"1970-01-01T00:00:00.00001Z\"}"
WARNING, test=Recommended.Proto3.JsonInput.TimestampHas9FractionalDigits.Validator: JSON payload validation failed. request=json_payload: "{\"optionalTimestamp\": \"1970-01-01T00:00:00.000000010Z\"}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{\"optionalTimestamp\":\"1970-01-01T00:00:00.00000001Z\"}"
ERROR, test=Required.Proto3.JsonInput.Struct.ProtobufOutput: Output was not equivalent to reference message: added: 2[0]: "\021\000\000\000\000\000H\223@"
deleted: optional_struct.fields.value.number_value: 1234
. request=json_payload: "{\n        \"optionalStruct\": {\n          \"nullValue\": null,\n          \"intValue\": 1234,\n          \"boolValue\": true,\n          \"doubleValue\": 1234.5678,\n          \"stringValue\": \"Hello world!\",\n          \"listValue\": [1234, \"5678\"],\n          \"objectValue\": {\n            \"value\": 0\n          }\n        }\n      }" requested_output_format: PROTOBUF message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=protobuf_payload: "\202\023\262\001\n\"\n\tlistValue\022\0252\023\n\t\021\000\000\000\000\000H\223@\n\006\032\0045678\n\035\n\013stringValue\022\016\032\014Hello world!\n\017\n\tboolValue\022\002 \001\n%\n\013objectValue\022\026*\024\n\022\n\005value\022\t\021\000\000\000\000\000\000\000\000\n\017\n\tnullValue\022\002\010\000\n\030\n\013doubleValue\022\t\021\255\372\\mEJ\223@\n\025\n\010intValue\022\t\021\000\000\000\000\000H\223@"
ERROR, test=Required.Proto3.JsonInput.ValueAcceptNull.ProtobufOutput: Output was not equivalent to reference message: deleted: optional_value: { null_value: NULL_VALUE }
. request=json_payload: "{\"optionalValue\": null}" requested_output_format: PROTOBUF message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=protobuf_payload: ""
ERROR, test=Required.Proto3.JsonInput.ValueAcceptNull.JsonOutput: Output was not equivalent to reference message: deleted: optional_value: { null_value: NULL_VALUE }
. request=json_payload: "{\"optionalValue\": null}" requested_output_format: JSON message_type: "protobuf_test_messages.proto3.TestAllTypesProto3", response=json_payload: "{}"

These tests failed.  If they can't be fixed right now, you can add them to the failure list so the overall suite can succeed.  Add them to the failure list by running:
  ./update_failure_list.py  --add failing_tests.txt

  Required.Proto3.JsonInput.Int32FieldLeadingZero
  Required.Proto3.JsonInput.Int32FieldNegativeWithLeadingZero
  Required.Proto3.JsonInput.Struct.ProtobufOutput
  Required.Proto3.JsonInput.Uint64FieldMaxValueNotQuoted.JsonOutput
  Required.Proto3.JsonInput.Uint64FieldMaxValueNotQuoted.ProtobufOutput
  Required.Proto3.JsonInput.ValueAcceptNull.JsonOutput
  Required.Proto3.JsonInput.ValueAcceptNull.ProtobufOutput
  Required.Proto3.ProtobufInput.RepeatedScalarSelectsLast.DOUBLE.JsonOutput
  Required.Proto3.ProtobufInput.ValidDataRepeated.DOUBLE.JsonOutput

CONFORMANCE SUITE FAILED: 594 successes, 194 skipped, 0 expected failures, 9 unexpected failures.

